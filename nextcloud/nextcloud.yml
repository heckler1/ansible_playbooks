#Installs Nextcloud 12 on CentOS 7
---
- name: Install Nextcloud instance
  hosts: all
  become: true
  tasks:
    - name: Import variables
      include_vars:
        file: nextcloud_vars.yml
    
    - name: Set hostname
      hostname:
        name: '{{ hostname }}'
        
    - name: Install package repos
      yum:
        name: '{{ item }}'
        state: present
      with_items:
      - epel-release
      - https://mirror.webtatic.com/yum/el7/webtatic-release.rpm
  
    - name: Update installed packages
      yum:
        name: '*'
        state: latest
  
    - name: Install Nextcloud dependencies
      yum:
        name: '{{ item }}'
        state: latest
      with_items:
        - httpd
        - php70w
        - php70w-dom
        - php70w-mbstring
        - php70w-gd
        - php70w-pdo
        - php70w-json
        - php70w-xml
        - php70w-zip
        - php70w-curl
        - php70w-mcrypt
        - php70w-pear
        - php70w-opcache
        - php70w-pecl-apcu
        - php70w-mysql
        - setroubleshoot-server
        - unzip
        - libselinux-python
        - mod_ssl
    
    - include: mysql_secure_installation.subtask.yml
    
    - name: Set Apache to start at boot
      systemd: 
        name: httpd
        state: started
        enabled: yes

    - name: Create a database named "nextcloud"
      mysql_db:
        name: nextcloud
        state: present

    - name: Create nextcloud database user
      mysql_user:
        name: nextcloud
        password: '{{ mysql_nextcloud_password }}'
        priv: 'nextcloud.*:ALL'
        state: present
    
    - name: Reload privilege tables
      command: 'mysql -ne "{{ item }}"'
      with_items:
        - FLUSH PRIVILEGES
      changed_when: False
    
    - name: Restart httpd to load MySQL PHP extension
      systemd:
        name: httpd
        state: restarted
        
    - name: Check if Nextcloud is already in the WebRoot
      stat:
        path: /var/www/html/index.php
      register: nextcloud_files

    - name: Download and unzip Nextcloud
      when: nextcloud_files.stat.exists == False
      unarchive:
        src: https://download.nextcloud.com/server/releases/latest-12.zip
        dest: /var/www/
        remote_src: yes
            
    - name: Move Nextcloud directory to WebRoot
      when: nextcloud_files.stat.exists == False
      command: '{{ item }}'
      with_items:
      - rm -r /var/www/html/
      - mv /var/www/nextcloud /var/www/html
      
    - name: Create data directory
      file:
        path: /var/www/html/data
        state: directory
        
    - name: Set permissions on WebRoot
      file: 
        path: /var/www/html/
        owner: apache
        group: apache
        recurse: yes
        state: directory
  
    - name: Create cert directory
      file:
        path: /etc/httpd/ssl/
        state: directory
        
    - name: Generate HTTPS Certs
      command: openssl req -new -nodes -x509 -subj "/C={{ country }}/ST={{ state }}/L={{ city }}/O={{ org }}/CN={{ hostname }}" -days 3650 -keyout /etc/httpd/ssl/nextcloud.key -out /etc/httpd/ssl/nextcloud.crt -extensions v3_ca creates=/etc/httpd/ssl/nextcloud.crt
   
    - name: Create Apache config file
      blockinfile:
        path: /etc/httpd/conf.d/nextcloud.conf
        create: yes
        block: |
          <VirtualHost *:443>
            ServerName {{ hostname }}
            ServerAlias {{ ansible_default_ipv4.address }}
            SSLEngine on
            SSLCertificateFile      /etc/httpd/ssl/nextcloud.crt
            SSLCertificateKeyFile /etc/httpd/ssl/nextcloud.key
            # HSTS (mod_headers is required) (15768000 seconds = 6 months)
            <IfModule mod_headers.c>
              Header always set Strict-Transport-Security "max-age=15552000; includeSubDomains"
            </IfModule>
            # Prevent HTTP XSS Trace attack
            RewriteEngine on
            RewriteCond %{REQUEST_METHOD} ^(TRACE|TRACK)
            RewriteRule .* - [F]
          </VirtualHost>
          # SSL Configuration - generated by Mozilla
          SSLProtocol             all -SSLv3 -TLSv1 -TLSv1.1
          SSLCipherSuite          ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256
          SSLHonorCipherOrder     on
          SSLCompression          off
          # OCSP Stapling, only in httpd 2.3.3 and later
          SSLUseStapling          on
          SSLStaplingResponderTimeout 5
          SSLStaplingReturnResponderErrors off
          SSLStaplingCache        shmcb:/var/run/ocsp(128000)
          <Directory /var/www/html/>
            Options +FollowSymlinks
            AllowOverride All
            <IfModule mod_dav.c>
              Dav off
            </IfModule>
            SetEnv HOME /var/www/html
            SetEnv HTTP_HOME /var/www/html
          </Directory>
          Header edit Set-Cookie ^(.*)$ $1;HttpOnly;Secure

    - name: Set SELinux to permissive mode
      selinux:
       state: permissive
       policy: targeted
       
    - name: Backup opcache.ini
      command: mv /etc/php.d/opcache.ini /etc/php.d/opcache.ini.bak
      
    - name: Apply recommended opcache config
      blockinfile:
        path: /etc/php.d/opcache.ini
        create: yes
        block: |
          zend_extension=/usr/lib64/php/modules/opcache.so
          opcache.enable=1
          opcache.enable_cli=1
          opcache.interned_strings_buffer=8
          opcache.max_accelerated_files=10000
          opcache.memory_consumption=128
          opcache.save_comments=1
          opcache.revalidate_freq=1
        
    - name: Restart httpd to apply config changes
      systemd:
        name: httpd
        state: restarted

    - name: Open firewall
      firewalld:
        port: 443/tcp
        state: enabled
        permanent: yes
        immediate: yes